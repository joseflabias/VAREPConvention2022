{"version":3,"sources":["index.tsx"],"names":["React","PureComponent","View","ScrollView","TouchableWithoutFeedback","Platform","HorizontalPicker","constructor","props","OS","e","setTimeout","scrollToDefaultIndex","width","nativeEvent","layout","setState","scrollViewWidth","paddingSide","itemWidth","onLayout","currentPositionX","contentOffset","x","onScroll","ignoreNextScroll","onScrollBeginDrag","cancelDelayedSnap","setDelayedSnap","onScrollEndDrag","onMomentumScrollBegin","onMomentumScrollEnd","position","onChange","refScrollView","current","scrollTo","y","animated","data","length","clearTimeout","timeoutDelayedSnap","timeout","snapTimeout","defaultSnapTimeout","nextPosition","Math","round","scrollToPosition","defaultIndex","console","warn","animatedScrollToDefaultIndex","createRef","state","render","renderItem","defaultScrollEventThrottle","defaultDecelerationRate","paddingHorizontal","onLayoutScrollView","map","item","index"],"mappings":"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","sourcesContent":["import React, { PureComponent, ReactNode } from 'react';\nimport {\n  View,\n  ScrollView,\n  ScrollViewProps,\n  TouchableWithoutFeedback,\n  LayoutChangeEvent,\n  NativeSyntheticEvent,\n  NativeScrollEvent,\n  Platform,\n} from 'react-native';\n\n\nexport interface HorizontalPickerProps extends ScrollViewProps {\n  data: any[],\n  renderItem: (item: any, index: number) => ReactNode,\n  itemWidth: number,\n  defaultIndex?: number,\n  animatedScrollToDefaultIndex?: boolean,\n  snapTimeout?: number\n  onChange?: (position: number) => void\n};\n\n\nexport type HorizontalPickerState = {\n  scrollViewWidth: number\n};\n\n\n\nexport default class HorizontalPicker extends PureComponent<HorizontalPickerProps, HorizontalPickerState> {\n  private paddingSide: number;\n  private refScrollView: React.RefObject<ScrollView>;\n  private ignoreNextScroll: boolean;\n  private timeoutDelayedSnap: number | NodeJS.Timeout;\n  private currentPositionX: number;\n  private readonly defaultScrollEventThrottle = 16;\n  private readonly defaultDecelerationRate = Platform.OS == \"ios\" ? 50 : 0.9;\n  private readonly defaultSnapTimeout = 500;\n\n  constructor(props: HorizontalPickerProps) {\n    super(props);\n    this.paddingSide = 0;\n    this.refScrollView = React.createRef();\n    this.ignoreNextScroll = false;\n    this.timeoutDelayedSnap = 0;\n    this.currentPositionX = 0;\n\n    this.state = {\n      scrollViewWidth: 0,\n    };\n  }\n\n  private onLayoutScrollView = (e: LayoutChangeEvent) => {\n    setTimeout(this.scrollToDefaultIndex, 0);\n    const { width } = e.nativeEvent.layout;\n    this.setState(() => ({ scrollViewWidth: width }));\n    this.paddingSide = width / 2 - this.props.itemWidth / 2;\n\n    if (this.props.onLayout != null) {\n      this.props.onLayout(e);\n    }\n  }\n\n  private onScroll = (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n    this.currentPositionX = e.nativeEvent.contentOffset.x;\n\n    if (this.props.onScroll != null) {\n      this.props.onScroll(e);\n    }\n  }\n\n  private onScrollBeginDrag = (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n    this.ignoreNextScroll = false;\n\n    if (this.props.onScrollBeginDrag != null) {\n      this.props.onScrollBeginDrag(e);\n    }\n  }\n\n  private onScrollEndDrag = (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n    this.cancelDelayedSnap();\n    if (this.ignoreNextScroll) {\n      this.ignoreNextScroll = false;\n    } else {\n      this.setDelayedSnap();\n    }\n\n    if (this.props.onScrollEndDrag != null) {\n      this.props.onScrollEndDrag(e);\n    }\n  }\n\n  private onMomentumScrollBegin = (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n    this.ignoreNextScroll = false;\n    this.setDelayedSnap();\n\n    if (this.props.onMomentumScrollBegin != null) {\n      this.props.onMomentumScrollBegin(e);\n    }\n  }\n\n  private onMomentumScrollEnd = (e: NativeSyntheticEvent<NativeScrollEvent>) => {\n    if (this.ignoreNextScroll) {\n      this.ignoreNextScroll = false;\n    } else {\n      this.setDelayedSnap();\n    }\n\n    if (this.props.onMomentumScrollEnd != null) {\n      this.props.onMomentumScrollEnd(e);\n    }\n  }\n\n  public scrollToPosition = (position: number) => {\n    const { itemWidth, onChange } = this.props;\n    const x = position * itemWidth;\n    this.ignoreNextScroll = true;\n\n    if (this.refScrollView.current != null) {\n      this.refScrollView.current.scrollTo({ x, y: 0, animated: true });\n    }\n    \n    if (onChange != null) {\n      if (position < 1) {\n        onChange(0);\n      } else if (position > this.props.data.length) {\n        onChange(this.props.data.length - 1);\n      } else {\n        onChange(position);\n      }\n    }\n  }\n\n  private cancelDelayedSnap = () => {\n    clearTimeout(this.timeoutDelayedSnap as NodeJS.Timeout);\n  }\n\n  private setDelayedSnap = (timeout?: number) => {\n    const snapTimeout = timeout || this.props.snapTimeout || this.defaultSnapTimeout;\n    const {\n      itemWidth,\n    } = this.props;\n    this.cancelDelayedSnap();\n    this.timeoutDelayedSnap = setTimeout(() => {\n      const nextPosition = Math.round(this.currentPositionX / itemWidth);\n      this.scrollToPosition(nextPosition);\n    }, snapTimeout);\n  }\n\n  scrollToDefaultIndex = () => {\n    if (this.refScrollView.current != null && this.props.defaultIndex != null) {\n        const {defaultIndex, itemWidth, data} = this.props;\n\n        if (defaultIndex >= data.length) {\n          console.warn(\"@vseslav/react-native-horizontal-picker: 'defaultIndex' is out of range of the array 'data'\");\n          return;\n        }\n\n        const x = defaultIndex * itemWidth;\n        this.refScrollView.current.scrollTo({ x, y: 0, animated: this.props.animatedScrollToDefaultIndex || false });\n    }\n  }\n  \n  render() {\n    const {\n      data,\n      renderItem,\n      ...props\n    } = this.props;\n\n    return (\n      <ScrollView\n        horizontal\n        showsHorizontalScrollIndicator={false}\n        scrollEventThrottle={this.defaultScrollEventThrottle}\n        decelerationRate={this.defaultDecelerationRate}\n        contentContainerStyle={{ paddingHorizontal: this.paddingSide }}\n        ref={this.refScrollView}\n        onLayout={this.onLayoutScrollView}\n        onScroll={this.onScroll}\n        onScrollBeginDrag={this.onScrollBeginDrag}\n        onScrollEndDrag={this.onScrollEndDrag}\n        onMomentumScrollBegin={this.onMomentumScrollBegin}\n        onMomentumScrollEnd={this.onMomentumScrollEnd}\n        {...props}\n      >\n        {\n          data.map((item: any, index: number) => (\n            <TouchableWithoutFeedback onPress={() => this.scrollToPosition(index)} key={index}>\n              <View>\n                {\n                  renderItem(item, index)\n                }\n              </View>\n            </TouchableWithoutFeedback>\n          ))\n        }\n      </ScrollView>\n    );\n  }\n}\n"]}